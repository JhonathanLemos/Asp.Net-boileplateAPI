{"remainingRequest":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\src\\views\\clientes\\ViewClientesCreate.vue?vue&type=style&index=0&id=5f711626&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\src\\views\\clientes\\ViewClientesCreate.vue","mtime":1684179193969},{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1683229778387},{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1683229781560},{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1683229779724},{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1683229777571},{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1683229780390}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYmFja2dyb3VuZCB7CiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7CiAgcGFkZGluZzogMjBweDsKICBib3JkZXItZW5kLXN0YXJ0LXJhZGl1czogNnB4Owp9Cg=="},{"version":3,"sources":["ViewClientesCreate.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuNA;AACA;AACA;AACA;AACA","file":"ViewClientesCreate.vue","sourceRoot":"src/views/clientes","sourcesContent":["<template>\n  <div class=\"d-flex flex-column mx-10 \" style=\"width: 100%; overflow: auto\">\n    <!-- DIALOG CONFIRM SALVAR -->\n    <v-dialog v-model=\"dialogConfirmSalvar\" persistent max-width=\"450px\">\n      <div class=\"white pa-8 d-flex flex-column align-center text-center\">\n        <v-icon style=\"font-size: 60px; border-radius: 15px\" color=\"purple\">mdi-alert</v-icon>\n\n        <div class=\"d-flex align-start\">\n          <h4 class=\"myApi-neutral--text text--var-1 pb-5 pt-5 mb-4\">\n            Após salvar não será possível alterar <br />\n            o endereço de e-mail do cadastro. <br />\n            Deseja continuar?\n          </h4>\n        </div>\n\n        <div class=\"d-flex flex-row justify-end\">\n          <v-btn rounded large text class=\"mr-8\" @click=\"dialogConfirmSalvar = false\">CANCELAR</v-btn>\n\n          <v-btn rounded large class=\"white--text\" style=\"background: purple\" @click=\"submit\"\n            :loading=\"loadingBtnDelete\">SALVAR</v-btn>\n        </div>\n      </div>\n    </v-dialog>\n    <!-- FIM -->\n    <AlertComponentVue :type=\"type\" :active=\"active\" :message=\"message\"></AlertComponentVue>\n\n\n    <top-section></top-section>\n\n    <div class=\"d-flex justify-space-between align-end background\">\n      <h2 class=\"myApi-neutral--text text--var-1\">{{ $route.meta.title }}</h2>\n\n      <div v-if=\"editPermission\" class=\"d-flex flex-row justify-end align-end\">\n        <v-btn dense rounded class=\"mr-3\" text @click=\"$router.push(`/home/clientes`)\">\n          CANCELAR\n        </v-btn>\n\n        <v-btn rounded dense class=\"myApi-purple white--text\" @click=\"submit()\" :loading=\"loadingBtnSave\">SALVAR</v-btn>\n      </div>\n    </div>\n\n\n    <v-form ref=\"form\" class=\"background\">\n      <div class=\"d-flex\">\n        <v-text-field class=\"mr-4 mt-2\" label=\"Nome\" v-model=\"dataNewItem.nome\" validate-on-blur\n          :rules=\"[rules.required]\">\n        </v-text-field>\n        <v-text-field type=\"number\" class=\"mr-4 mt-2\" label=\"Idade\" v-model=\"dataNewItem.idade\" validate-on-blur\n          :rules=\"[rules.required]\">\n        </v-text-field>\n      </div>\n      <div class=\"d-flex \">\n        <v-text-field class=\"mr-4 mt-2\" label=\"Telefone\" v-model=\"dataNewItem.telefone\" validate-on-blur\n          v-mask=\"['(##) ####-####', '(##) #####-####']\" :rules=\"[rules.telefone, rules.required]\">\n        </v-text-field>\n        <v-text-field class=\"mr-4 mt-2\" label=\"Cnpj\" v-model=\"dataNewItem.cnpj\" validate-on-blur\n          :rules=\"[rules.required, cnpj]\">\n        </v-text-field>\n      </div>\n    </v-form>\n\n    <div v-if=\"$route.params.id\" class=\"background mt-3\">\n      <h2>Produtos</h2>\n      <div class=\"flex-grow-1 rounded-lg pa-4 white elevation-5\">\n        <v-data-table :key=\"key\" disable-sort :options.sync=\"options\" :headers=\"headers\" :items=\"rows\"\n          :server-items-length=\"totalItems\" noDataText=\"Nenhum registro encontrado\" :loading=\"tableLoading\"\n          loading-text=\"Aguarde, carregando produtos...\" :footer-props=\"{\n            itemsPerPageOptions: [10, 20],\n            itemsPerPageText: 'Itens por Página',\n          }\">\n          <!-- Icone Manutenção -->\n          <!-- <template v-slot:[`item.col1`]=\"{ item }\">\n            <div v-if=\"editPermission\" class=\"d-flex flex-nowrap\">\n              <v-btn icon @click=\"$router.push(`/home/produtos/edit/${item.col1}`)\">\n                <v-icon> mdi-pencil </v-icon>\n              </v-btn>\n\n              <v-btn icon @click=\"deleteItem(1, item.col1)\">\n                <v-icon> mdi-delete </v-icon>\n              </v-btn>\n            </div>\n\n            <div v-else class=\"d-flex flex-nowrap\">\n\n            </div>\n          </template> -->\n        </v-data-table>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport TopSection from \"@/components/TopSection.vue\";\nimport getRouterData from \"@/mixins/getRouterData.js\";\nimport crudController from \"@/mixins/crudController.js\";\nimport validationRules from \"../../mixins/validationRules\";\nimport { mask } from \"vue-the-mask\";\nimport AlertComponentVue from \"../../components/AlertComponent.vue\";\nimport { createNamespacedHelpers } from \"vuex\";\nconst moduleCustomer = createNamespacedHelpers(\"ModuleClientes\");\n\nexport default {\n  directives: { mask },\n  data: () => ({\n    dialogConfirmSalvar: null,\n    dataNewItem: {},\n    totalItems: 10,\n    rows: [],\n    tableLoading: false,\n    options: {},\n    headers: [{\n      text: \"\",\n      value: \"\",\n      width: \"10%\"\n    },\n    {\n      text: \"Nome\",\n      value: \"col2\",\n      width: \"10%\"\n    },\n    {\n      text: \"Código produto\",\n      value: \"col3\",\n      width: \"20%\"\n    },\n    {\n      text: \"Quantidade\",\n      value: \"col4\",\n      width: \"20%\"\n    },\n    ],\n  }),\n\n  computed: {\n    editPermission() {\n      return this.hasPermission(this.$PermissionNames.permissionCustomerEdit);\n    },\n  },\n\n  watch: {\n    active() {\n      if (this.success) this.$router.push({ path: `/home/clientes` });\n    },\n\n    options: {\n      handler() {\n        if (this.$route.params.id)\n        this.getProdutos(this.options);\n      },\n      deep: true,\n    },\n  },\n\n  async mounted() {\n    var id = this.$route.params.id;\n    if (id) {\n      var result = await this.getItemById(id)\n      this.dataNewItem = result\n      this.getProdutos(this.options);\n    }\n\n  },\n\n  methods: {\n    ...moduleCustomer.mapActions({\n      getProductsByCustomerId: \"getProductsByCustomerId\"\n    }),\n\n    async getProdutos(v) {\n      v.customerId = parseInt(this.$route.params.id);\n      var result = await this.getProductsByCustomerId(v);\n      this.buildRows(result.data.result)\n    },\n\n    async submit() {\n      var id = this.$route.params.id;\n      if (!id) {\n        this.addNewItem();\n      }\n      else\n        this.updateItem(id);\n    },\n\n    buildRows(data) {\n      let dataRows = [];\n\n      data.forEach((e) => {\n        dataRows.push({\n          col1: e.id,\n          col2: e.nomeProduto,\n          col3: e.codigoProduto,\n          col4: e.quantidade,\n        });\n      });\n\n      this.rows = dataRows;\n    },\n  },\n\n  mixins: [\n    getRouterData,\n    crudController({ store: \"ModuleClientes\" }),\n    validationRules\n  ],\n\n  components: {\n    TopSection,\n    AlertComponentVue\n  },\n\n};\n</script>\n\n<style scoped>\n.background {\n  background-color: white;\n  padding: 20px;\n  border-end-start-radius: 6px;\n}\n</style>\n"]}]}