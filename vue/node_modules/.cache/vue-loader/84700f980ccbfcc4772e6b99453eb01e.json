{"remainingRequest":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\src\\views\\ordemCompra\\coleta\\primeiraColetaMateriais.vue?vue&type=style&index=0&id=dffb85ae&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\src\\views\\ordemCompra\\coleta\\primeiraColetaMateriais.vue","mtime":1680609356654},{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1683229778387},{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1683229781560},{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1683229779724},{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1683229777571},{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1683229780390}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoudi1pbnB1dC0tc2VsZWN0aW9uLWNvbnRyb2xzX19pbnB1dCB7DQogIG1hcmdpbi1sZWZ0OiAxMHB4ICFpbXBvcnRhbnQ7DQp9DQoNCi52LWlucHV0LS1zZWxlY3Rpb24tY29udHJvbHNfX2lucHV0IC52LWljb24gew0KICBmb250LXNpemU6IDIwcHggIWltcG9ydGFudDsNCn0NCg=="},{"version":3,"sources":["primeiraColetaMateriais.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqdA;AACA;AACA;;AAEA;AACA;AACA","file":"primeiraColetaMateriais.vue","sourceRoot":"src/views/ordemCompra/coleta","sourcesContent":["<template>\r\n  <div>\r\n    <v-dialog v-model=\"dialogAvisoDelete\" max-width=\"360px\">\r\n      <div class=\"white pa-5 d-flex flex-column align-center text-center\">\r\n        <v-icon style=\"font-size: 60px\" color=\"#F75A02\"> mdi-alert </v-icon>\r\n\r\n        <h4\r\n          class=\"asia-neutral--text text--var-1 mb-8 mt-8\"\r\n          style=\"font-size: 15px\"\r\n        >\r\n          A <span style=\"font-weight: bold\">Quantidade Faturada </span> é\r\n          <span style=\"font-weight: bold\"> diferente</span> da\r\n          <span style=\"font-weight: bold\">Quantidade Provisionada.</span> Deseja\r\n          prosseguir?\r\n        </h4>\r\n\r\n        <div class=\"d-flex flex-row justify-end\">\r\n          <v-btn\r\n            rounded\r\n            large\r\n            class=\"ml-3\"\r\n            text\r\n            @click=\"dialogAvisoDelete = false\"\r\n            >CANCELAR</v-btn\r\n          >\r\n          <v-btn\r\n            style=\"background: #f75a02\"\r\n            dark\r\n            rounded\r\n            large\r\n            text\r\n            class=\"mr-4\"\r\n            @click=\"updateCollectionMaterial\"\r\n            >PROSSEGUIR</v-btn\r\n          >\r\n        </div>\r\n      </div>\r\n    </v-dialog>\r\n    <div\r\n      class=\"flex-grow-1 rounded-lg pa-4 white elevation-2 mt-2 ml-1 mr-1 mb-2\"\r\n      style=\"overflow: hidden\"\r\n    >\r\n      <!-- Data Table -->\r\n      <v-data-table\r\n        disable-sort\r\n        :headers=\"isDistribution ? headersDistribution : headers\"\r\n        :items=\"rows\"\r\n        :loading=\"tableLoading\"\r\n        noDataText=\"Nenhum registro encontrado\"\r\n        loading-text=\"Aguarde, carregando grupos de clientes...\"\r\n        :footer-props=\"{\r\n          itemsPerPageOptions: [10, 50, 100],\r\n          itemsPerPageText: 'Itens por Página',\r\n        }\"\r\n      >\r\n        <!-- Icone Edição -->\r\n        <template v-slot:[`item.col1`]=\"{ item }\">\r\n          <div class=\"d-flex flex-nowrap align-center\">\r\n            <v-checkbox\r\n              @click=\"\r\n                item.col1 ? getMaterialToUpdate(item) : setFalse(item.col9)\r\n              \"\r\n              :disabled=\"!editPermission\"\r\n              v-model=\"item.col1\"\r\n              :value=\"item.col1\"\r\n              color=\"asia-red\"\r\n            ></v-checkbox>\r\n\r\n            <v-btn\r\n              v-if=\"item.col1 && editPermission\"\r\n              icon\r\n              @click=\"getMaterialToUpdate(item)\"\r\n            >\r\n              <v-icon>mdi-pencil</v-icon>\r\n            </v-btn>\r\n          </div>\r\n        </template>\r\n\r\n        <template v-slot:[`item.col5`]=\"{ item }\">\r\n          {{ item.col5 | currencyFormatKg }}\r\n        </template>\r\n\r\n        <template v-slot:[`item.col6`]=\"{ item }\">\r\n          {{ item.col6 | currencyFormatKg }}\r\n        </template>\r\n\r\n        <template v-slot:[`item.col7`]=\"{ item }\">\r\n          <div v-if=\"currency == 'USD' && item.col7\">\r\n            {{ item.col7 | currencyFormat }}\r\n          </div>\r\n          <div v-else-if=\"currency == 'R$' && item.col7\">\r\n            {{ item.col7 | currencyFormatReal }}\r\n          </div>\r\n          <div v-else></div>\r\n        </template>\r\n\r\n        <template v-slot:[`item.col8`]=\"{ item }\">\r\n          <div v-if=\"currency == 'USD'\">\r\n            {{ item.col8 | currencyFormat }}\r\n          </div>\r\n          <div v-else-if=\"currency == 'R$'\">\r\n            {{ item.col8 | currencyFormatReal }}\r\n          </div>\r\n        </template>\r\n\r\n        <template v-slot:[`item.col9`]> </template>\r\n\r\n        <template v-slot:[`body.append`]>\r\n          <div class=\"d-flex align-center mt-2 mb-2\" style=\"width: 240%\">\r\n            <span class=\"mr-4\" style=\"font-size: 14px; font-weight: 700\"\r\n              >Valor total dos materiais:</span\r\n            >\r\n            <h3 style=\"font-size: 16px; font-weight: 400\">\r\n              <div v-if=\"currency == 'USD'\">\r\n                {{ valorTotalMaterial | currencyFormat }}\r\n              </div>\r\n              <div v-else-if=\"currency == 'R$'\">\r\n                {{ valorTotalMaterial | currencyFormatReal }}\r\n              </div>\r\n            </h3>\r\n          </div>\r\n        </template>\r\n      </v-data-table>\r\n    </div>\r\n\r\n    <!-- MODAL EDIT -->\r\n    <v-dialog\r\n      v-model=\"modalEditMaterial\"\r\n      max-width=\"800px\"\r\n      @keydown.esc=\"closeModalAndReset\"\r\n    >\r\n      <v-form ref=\"form\" v-model=\"isFormValid\">\r\n        <div class=\"white pa-4 d-flex flex-column\">\r\n          <div class=\"d-flex justify-space-between\">\r\n            <h2 class=\"asia-neutral--text text--var-1 ml-2\">Material</h2>\r\n\r\n            <v-btn icon text @click=\"closeModalAndReset\">\r\n              <v-icon> mdi-close </v-icon>\r\n            </v-btn>\r\n          </div>\r\n\r\n          <v-divider></v-divider>\r\n\r\n          <div class=\"d-flex my-6 ml-4\" style=\"width: 100%\">\r\n            <v-input\r\n              style=\"width: 50%\"\r\n              label=\"Material\"\r\n              :messages=\"\r\n                infoMaterials.materialName ? infoMaterials.materialName : ''\r\n              \"\r\n            ></v-input>\r\n\r\n            <v-input\r\n              style=\"width: 50%\"\r\n              label=\"Quantidade Provisionada\"\r\n              :messages=\"\r\n                infoMaterials.provisionedQtd\r\n                  ? infoMaterials.provisionedQtd.toString()\r\n                  : ''\r\n              \"\r\n            ></v-input>\r\n          </div>\r\n\r\n          <div class=\"d-flex my-6 ml-4\" style=\"width: 100%\">\r\n            <div style=\"width: 50%\">\r\n              <v-radio-group v-model=\"infoMaterials.radio\">\r\n                <v-radio\r\n                  :rules=\"[rules.required]\"\r\n                  class=\"mb-4\"\r\n                  color=\"asia-red\"\r\n                  :value=\"false\"\r\n                  label=\"Quantidade total do material\"\r\n                ></v-radio>\r\n\r\n                <v-radio\r\n                  color=\"asia-red\"\r\n                  :value=\"true\"\r\n                  :rules=\"[rules.required]\"\r\n                  label=\"Quantidade parcial do material\"\r\n                ></v-radio>\r\n              </v-radio-group>\r\n            </div>\r\n\r\n            <Money\r\n              v-model=\"infoMaterials.billedAmount\"\r\n              class=\"mr-4\"\r\n              label=\"Quantidade Faturada\"\r\n              style=\"width: 50%\"\r\n              suffix=\"kg\"\r\n              :required=\"true\"\r\n              :notZero=\"true\"\r\n              :properties=\"{\r\n                suffix: 'kg',\r\n              }\"\r\n            ></Money>\r\n          </div>\r\n\r\n          <v-divider></v-divider>\r\n\r\n          <div class=\"d-flex flex-row justify-end mt-3\">\r\n            <v-btn\r\n              rounded\r\n              :disabled=\"!isFormValid\"\r\n              :loading=\"loadingBtnSave\"\r\n              class=\"asia-red white--text\"\r\n              @click=\"validateBilledAmount()\"\r\n              >SALVAR</v-btn\r\n            >\r\n          </div>\r\n        </div>\r\n      </v-form>\r\n    </v-dialog>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport validationRules from \"../../../mixins/validationRules\";\r\nimport { createNamespacedHelpers } from \"vuex\";\r\nimport Money from \"@/components/Money\";\r\nconst moduleColetasMaterials = createNamespacedHelpers(\r\n  \"ModuleColetasMaterials\"\r\n);\r\n\r\nconst moduleColetas = createNamespacedHelpers(\"ModuleColetas\");\r\n\r\nexport default {\r\n  props: [\r\n    \"value\",\r\n    \"currency\",\r\n    \"idPurchaseOrderDistribuition\",\r\n    \"informacoesGerais\",\r\n    \"isDistribution\",\r\n    \"infosSelecionada\",\r\n    \"coletaSelecionada\",\r\n  ],\r\n  data: () => ({\r\n    headersDistribution: [\r\n      { text: \"Faturado\", value: \"col1\", width: \"5%\" },\r\n      { text: \"Código\", value: \"col2\", width: \"10%\" },\r\n      { text: \"Descrição\", value: \"col3\", width: \"32%\" },\r\n      { text: \"Provisionada\", value: \"col4\", width: \"10%\" },\r\n      { text: \"Faturada\", value: \"col5\", width: \"10%\" },\r\n      { text: \"Saldo do Material\", value: \"col6\", width: \"13%\" },\r\n      { text: \"Valor Unitário\", value: \"col7\", width: \"10%\" },\r\n      { text: \"Valor Total\", value: \"col8\", width: \"10%\" },\r\n      { text: \"\", value: \"col9\" },\r\n    ],\r\n    headers: [\r\n      { text: \"Faturado\", value: \"col1\", width: \"5%\" },\r\n      { text: \"Código\", value: \"col2\", width: \"10%\" },\r\n      { text: \"Descrição\", value: \"col3\", width: \"30%\" },\r\n      { text: \"Embarcado O.C.\", value: \"col4\", width: \"12%\" },\r\n      { text: \"Faturada\", value: \"col5\", width: \"10%\" },\r\n      { text: \"Saldo do Material\", value: \"col6\", width: \"13%\" },\r\n      { text: \"Valor Unitário\", value: \"col7\", width: \"10%\" },\r\n      { text: \"Valor Total\", value: \"col8\", width: \"10%\" },\r\n      { text: \"\", value: \"col9\" },\r\n    ],\r\n    isFormValid: false,\r\n    rows: [],\r\n    list: [],\r\n    dialogAvisoDelete: null,\r\n    materialsList: [],\r\n    valorTotalMaterial: null,\r\n    loadingBtnSave: null,\r\n    modalEditMaterial: false,\r\n    materialsListToUpdate: [],\r\n    infoMaterials: {\r\n      radio: false,\r\n    },\r\n    tableLoading: true,\r\n    initialValueBilledAmount: 0,\r\n    disableBtnSave: false,\r\n    isEditingItem: false,\r\n  }),\r\n\r\n  methods: {\r\n    ...moduleColetasMaterials.mapActions({\r\n      getById: \"getById\",\r\n      updateColetaMaterial: \"update\",\r\n      getAllByCollection: \"getAllByCollection\",\r\n      setToFalseById: \"setToFalseById\",\r\n      createMaterial: \"create\",\r\n    }),\r\n\r\n    ...moduleColetas.mapActions({\r\n      createColeta: \"create\",\r\n      updateColeta: \"update\",\r\n    }),\r\n\r\n    validateBilledAmount() {\r\n      if (\r\n        this.infoMaterials.provisionedQtd != this.infoMaterials.billedAmount\r\n      ) {\r\n        this.dialogAvisoDelete = true;\r\n      } else {\r\n        this.updateCollectionMaterial();\r\n        this.dialogAvisoDelete = false;\r\n      }\r\n    },\r\n    buildRows(data) {\r\n      if (!data || data.length == 0) {\r\n        this.rows = [];\r\n      }\r\n\r\n      this.valorTotalMaterial = null;\r\n      data.forEach((element) => {\r\n        var teste = element.billedAmount * element.unitaryValue;\r\n        this.valorTotalMaterial = this.valorTotalMaterial + teste;\r\n      });\r\n\r\n      this.rows = data.map((e) => ({\r\n        col1: e.isBilled,\r\n        col2: e.materialCode,\r\n        col3: e.materialName,\r\n        col4: this.isDistribution\r\n          ? `${e.provisionedQtd} kg`\r\n          : `${e.shippedQuantity} kg`,\r\n        col5: e.billedAmount,\r\n        col6: e.balance,\r\n        col7: e.unitaryValue,\r\n        col8:\r\n          e.billedAmount && e.unitaryValue\r\n            ? e.billedAmount * e.unitaryValue\r\n            : 0,\r\n\r\n        col9: e.id,\r\n        col10: this.isDistribution ? e.provisionedQtd : e.shippedQuantity,\r\n      }));\r\n    },\r\n\r\n    async getMaterialToUpdate(item) {\r\n      if (item.col9) {\r\n        var response = await this.getById(item.col9);\r\n        if (response.status == 200 && response.data.result) {\r\n          this.infoMaterials = response.data.result;\r\n          this.infoMaterials.radio =\r\n            this.infoMaterials.typeQuantifyMaterial == 0 ? true : false;\r\n          this.infoMaterials.isBilled = true;\r\n          this.modalEditMaterial = true;\r\n        }\r\n      } else {\r\n        this.infoMaterials = this.materialsList.find(\r\n          (x) => x.provisionedQtd == item.col10 && x.materialCode == item.col2\r\n        );\r\n        this.infoMaterials.radio = false;\r\n        this.modalEditMaterial = true;\r\n      }\r\n\r\n      this.initialValueBilledAmount = this.infoMaterials.billedAmount;\r\n    },\r\n\r\n    closeModalAndReset() {\r\n      this.infoMaterials.billedAmount = this.initialValueBilledAmount;\r\n      this.modalEditMaterial = false;\r\n      this.materialsList = this.materialsListToUpdate;\r\n      this.buildRows(this.materialsList);\r\n      this.tableLoading = false;\r\n    },\r\n\r\n    async setFalse(id) {\r\n      if (!this.infoMaterials.isNew) {\r\n        this.valorTotalMaterial = null;\r\n        let response = await this.setToFalseById(id);\r\n\r\n        if (response.status == 200) {\r\n          this.$emit(\"setIndex\", this.coletaSelecionada, this.infosSelecionada);\r\n        }\r\n      } else {\r\n        this.infoMaterials.isBilled = false;\r\n      }\r\n    },\r\n\r\n    async updateCollectionMaterial() {\r\n      var resposta = null;\r\n      this.dialogAvisoDelete = false;\r\n      this.loadingBtnSave = true;\r\n      var materialsToCreate = this.materialsList;\r\n      this.coletaSelecionada;\r\n\r\n      if (this.informacoesGerais && this.informacoesGerais.id) {\r\n        this.infoMaterials.isBilled = true;\r\n        this.infoMaterials.typeQuantifyMaterial = this.infoMaterials.radio\r\n          ? 0\r\n          : 1;\r\n        resposta = await this.updateColetaMaterial(this.infoMaterials);\r\n      } else {\r\n        var itemUpdate = materialsToCreate.find(\r\n          (x) => x.billedAmount == this.infoMaterials.billedAmount\r\n        );\r\n\r\n        itemUpdate.isBilled = true;\r\n        itemUpdate.typeQuantifyMaterial = this.infoMaterials.radio ? 0 : 1;\r\n\r\n        materialsToCreate.forEach((x) => {\r\n          x.id = 0;\r\n          x.purchaseCollectionId = 0;\r\n        });\r\n\r\n        var item = {\r\n          purchaseOrderDistributionId: this.idPurchaseOrderDistribuition,\r\n          collectionStatusId: null,\r\n          collectionDate: null,\r\n          shippingCompany: null,\r\n          receipt: null,\r\n          purchaseCollectionMaterial: materialsToCreate,\r\n        };\r\n\r\n        resposta = await this.createColeta(item);\r\n      }\r\n\r\n      this.tratarResponse(resposta);\r\n\r\n      this.modalEditMaterial = false;\r\n      this.loadingBtnSave = false;\r\n    },\r\n\r\n    async tratarResponse(resposta) {\r\n      if (resposta.status == 200) {\r\n        this.modalEditMaterial = false;\r\n        this.$emit(\"success\", \"Material salvo com sucesso!\");\r\n        var responseDelivery = await this.getAllByCollection(\r\n          this.infoMaterials.purchaseCollectionId\r\n        );\r\n        this.materialsList = responseDelivery.data.result;\r\n        this.buildRows(this.materialsList);\r\n      } else {\r\n        this.$emit(\"error\", \"Erro ao salvar o material!\");\r\n      }\r\n    },\r\n  },\r\n\r\n  watch: {\r\n    value(newValue) {\r\n      this.materialsListToUpdate = newValue;\r\n      this.materialsList = newValue;\r\n      this.buildRows(this.materialsList);\r\n      this.tableLoading = false;\r\n    },\r\n\r\n    materialsList: {\r\n      deep: true,\r\n      handler() {\r\n        this.valorTotalMaterial = null;\r\n        this.materialsList.forEach((element) => {\r\n          var valorTotalMaterial = element.billedAmount * element.unitaryValue;\r\n          this.valorTotalMaterial =\r\n            this.valorTotalMaterial + valorTotalMaterial;\r\n        });\r\n        this.$emit(\"input\", this.materialsList);\r\n        this.tableLoading = false;\r\n      },\r\n    },\r\n  },\r\n\r\n  computed: {\r\n    editPermission() {\r\n      return this.hasPermission(\r\n        this.$PermissionNames.permissionPurchaseOrderEdit\r\n      );\r\n    },\r\n  },\r\n\r\n  components: { Money },\r\n  mixins: [validationRules],\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.v-input--selection-controls__input {\r\n  margin-left: 10px !important;\r\n}\r\n\r\n.v-input--selection-controls__input .v-icon {\r\n  font-size: 20px !important;\r\n}\r\n</style>"]}]}