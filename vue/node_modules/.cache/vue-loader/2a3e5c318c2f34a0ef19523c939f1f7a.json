{"remainingRequest":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\src\\views\\usuarios\\groupsDialog.vue?vue&type=style&index=0&id=5ba1cb48&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\src\\views\\usuarios\\groupsDialog.vue","mtime":1683311429871},{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1683229778387},{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1683229781560},{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1683229779724},{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1683229777571},{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1683229780390}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5ncnVwb3MgewogIGJhY2tncm91bmQtY29sb3I6ICNmYWU3ZTc7CiAgYm9yZGVyLWxlZnQ6IDJweCBzb2xpZCAjYTEwYTBjOwogIGJhY2tncm91bmQtaW1hZ2U6IG1kaS1tZW51LXJpZ2h0Owp9Cg=="},{"version":3,"sources":["groupsDialog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAieA;AACA;AACA;AACA;AACA","file":"groupsDialog.vue","sourceRoot":"src/views/usuarios","sourcesContent":["<template>\n  <div>\n    <v-dialog v-model=\"dialog\" max-width=\"900px\" max-heigth=\"500px\">\n      <div class=\"white pa-4 d-flex flex-column\">\n        <div class=\"d-flex align-center justify-space-between\">\n          <h4 class=\"myApi-neutral--text text--var-1 pb-4 pt-5\">\n            Vincular Grupo ao Usuário\n          </h4>\n\n          <v-btn text rounded @click=\"closeDialogVincularGrupo()\">\n            <v-icon>mdi-close</v-icon>\n          </v-btn>\n        </div>\n\n        <v-divider></v-divider>\n\n        <div class=\"d-flex my-3\" style=\"width: 100%\">\n          <div\n            class=\"d-flex mr-3 my-3\"\n            style=\"\n              background: #fae7e7;\n              width: 25%;\n              height: 50px;\n              border-left: 2px solid #a10a0c;\n            \"\n          >\n            <div\n              class=\"d-flex align-center justify-space-between pa-3\"\n              style=\"width: 50px\"\n            >\n              <h3 style=\"margin-right: 120px\">Grupo</h3>\n              <v-icon color=\"#A10A0C\">mdi-menu-right</v-icon>\n            </div>\n          </div>\n\n          <div style=\"background: #a10a0c; width: 2px; height: 400px\"></div>\n\n          <div class=\"d-flex flex-column\" style=\"max-width: 35%\">\n            <div style=\"width: 100%\">\n              <v-text-field\n                :disabled=\"isEdit\"\n                clearable\n                solo\n                @click:clear=\"searchAllGroupsOnClean\"\n                label=\"Pesquisar por Grupo...\"\n                hint=\"Pressione enter para pesquisar\"\n                persistent-hint\n                class=\"mx-3 my-3\"\n                v-model=\"search\"\n                prepend-inner-icon=\"mdi-magnify\"\n              ></v-text-field>\n            </div>\n\n            <div style=\"height: 300px; overflow: scroll\">\n              <div\n                v-for=\"(customerGroup, i) in listaGrupoClientes\"\n                :key=\"i\"\n                :class=\"[\n                  customerGroup.id == groupSelectedId\n                    ? clickedClass\n                    : normalClass,\n                ]\"\n                style=\"\n                  width: 90%;\n                  height: 50px;\n                  font-weight: 600;\n                  font-size: 20px;\n                  cursor: pointer;\n                \"\n              >\n                <div @click=\"defineGrupo(customerGroup)\">\n                  {{ customerGroup.name }}\n                </div>\n              </div>\n              <span class=\"normalClass ml-4\" v-if=\"hideList\"\n                >Nenhum Item Encontrado</span\n              >\n            </div>\n          </div>\n\n          <div style=\"background: #a10a0c; width: 2px; height: 400px\"></div>\n\n          <div\n            v-if=\"showCustomerDialog\"\n            class=\"d-flex flex-column\"\n            style=\"max-width: 35%\"\n          >\n            <div style=\"width: 100%\">\n              <v-text-field\n                clearable\n                solo\n                label=\"Pesquisar por Cliente...\"\n                hint=\"Pressione enter para pesquisar\"\n                persistent-hint\n                @click:clear=\"searchCustomers(1)\"\n                class=\"mx-3 my-3\"\n                v-model=\"searchCustomer\"\n                @keypress.enter=\"searchCustomers(2)\"\n                prepend-inner-icon=\"mdi-magnify\"\n              ></v-text-field>\n            </div>\n\n            <div style=\"height: 300px; overflow: scroll\">\n              <div class=\"normalClass\" style=\"width: 100%\">\n                <h4\n                  :class=\"clickedClass\"\n                  style=\"cursor: pointer\"\n                  v-if=\"customersList.length > 0\"\n                  @click=\"selectAllCustomers\"\n                >\n                  {{\n                    grupoClientesSelecionados.length > 0\n                      ? \"Limpar seleção\"\n                      : \"Selecionar Todos\"\n                  }}\n                  <v-icon color=\"#A10A0C\">mdi-menu-down</v-icon>\n                </h4>\n              </div>\n\n              <h3\n                @click=\"setCustomersInList(item)\"\n                style=\"cursor: pointer\"\n                v-for=\"(item, i) in customersList\"\n                :key=\"i\"\n                :class=\"[\n                  validateCustomersClass.filter((x) => x == item.id)[0] ==\n                  item.id\n                    ? clickedClass\n                    : normalClass,\n                ]\"\n              >\n                {{ item.corporateName }}\n              </h3>\n              <span v-if=\"hideCustomers\" class=\"normalClass ml-4\"\n                >Nenhum cliente encontrado</span\n              >\n            </div>\n          </div>\n        </div>\n        <div style=\"width: 35%\"></div>\n\n        <v-divider></v-divider>\n\n        <div class=\"d-flex flex-row justify-end pt-5\">\n          <v-btn rounded large class=\"mr-3\" text @click=\"dialog = false\">\n            CANCELAR\n          </v-btn>\n\n          <v-btn\n            rounded\n            large\n            :disabled=\"grupoClientesSelecionados == 0\"\n            class=\"myApi-red white--text\"\n            @click=\"saveGroupCustomers\"\n            >SALVAR</v-btn\n          >\n        </div>\n      </div>\n    </v-dialog>\n  </div>\n</template>\n\n<script>\nimport { mapActions } from \"vuex\";\nexport default {\n  props: {\n    dialogVincularGrupo: null,\n    sendToTableGrupoCliente: null,\n    value: [],\n    setCustomersList: null,\n    setListaGrupoClientes: null,\n    validaEdicao: null,\n    setGrupoClientesSelecionados: null,\n    setValidateCustomersClass: null,\n    setGroupSelectedId: null,\n  },\n\n  data: () => ({\n    customersList: [],\n    listaGrupoClientes: [],\n    groupSelectedId: null,\n    searchCustomer: null,\n    validateCustomersClass: [],\n    normalClass: \"d-flex align-center pa-4 mx-3 my-3\",\n    clickedClass: \"d-flex align-center pa-4 mx-3 my-3 grupos\",\n    search: \"\",\n    grupoClientesSelecionados: [],\n    dataNewItem: {\n      customerGroupList: [],\n    },\n  }),\n\n  computed: {\n    hideCustomers() {\n      return this.customersList.length == 0 ? true : false;\n    },\n\n    hideList() {\n      return this.listaGrupoClientes.length == 0 ? true : false;\n    },\n\n    isEdit: {\n      get() {\n        return this.validaEdicao;\n      },\n      set(v) {\n        this.$emit(\"validaEdicao\", v);\n      },\n    },\n    dataCustomerGroupList: {\n      get() {\n        return this.value;\n      },\n      set(v) {\n        this.$emit(\"input\", v);\n      },\n    },\n    sendToTableGrupoClientes: {\n      get() {\n        return this.sendToTableGrupoCliente;\n      },\n      set(v) {\n        this.$emit(\"setsendToTableGrupoClientes\", v);\n      },\n    },\n\n    dialog: {\n      get() {\n        return this.dialogVincularGrupo;\n      },\n      set() {\n        this.$emit(\"dialogVincularGrupo\", false);\n      },\n    },\n\n    showCustomerDialog() {\n      return this.groupSelectedId ? true : false;\n    },\n  },\n\n  methods: {\n    ...mapActions(\"ModuleGrupoClientes\", {\n      getAllSelect: \"getAllSelect\",\n      createGroupCustomers: \"create\",\n      getGroupById: \"getById\",\n      getAllGrupoCliente: \"getAll\",\n    }),\n\n    ...mapActions(\"ModuleClientes\", {\n      getAllSelectCustomers: \"getAll\",\n      searchAndGetCustomersWithoutId: \"searchAndGetCustomersWithoutId\",\n      getCustomersByGroup: \"getCustomersByGroup\",\n      getCustomerById: \"getById\",\n    }),\n\n    defineGrupo(item) {\n      if (item.id == this.groupSelectedId) return;\n\n      this.groupLength = item.customers.length;\n      if (this.dataCustomerGroupList) {\n        if (this.dataCustomerGroupList.length > 0) {\n          this.dataCustomerGroupList.forEach((x) => {\n            item.customers = item.customers.filter((y) => y.id != x.id);\n          });\n        }\n      }\n      this.grupoClientesSelecionados = [];\n      this.validateCustomersClass = [];\n      this.groupSelectedId = item.id;\n      this.groupName = item.name;\n      this.groupStatus = item.status;\n      this.customersList = item.customers;\n    },\n\n    async searchGrupos() {\n      var search = { SearchText: this.search };\n      var result = await this.getAllSelect(search);\n      this.listaGrupoClientes = result.data.result.items;\n\n      this.sendToTableGrupoClientes.forEach((x) => {\n        this.listaGrupoClientes = this.listaGrupoClientes.filter(\n          (y) => y.name != x.groupName\n        );\n      });\n\n      if (this.grupoClientesSelecionados.length > 0) {\n        this.grupoClientesSelecionados.forEach((v) => {\n          if (this.customerGroupList && this.customerGroupList.length > 0)\n            this.customerGroupList = this.customerGroupList.filter(\n              (x) => x.id != v.id\n            );\n        });\n      }\n    },\n\n    async searchAllGroupsOnClean() {\n      this.search = \"\";\n      this.searchGrupos();\n    },\n\n    async saveGroupCustomers() {\n      if (this.isEdit) {\n        var usuarioSelecionado = this.sendToTableGrupoClientes.filter(\n          (x) => x.groupId == this.groupSelectedId\n        );\n        var outrosUsuarios = this.sendToTableGrupoClientes.filter(\n          (x) => x.groupId != this.groupSelectedId\n        );\n\n        usuarioSelecionado[0].customers = this.grupoClientesSelecionados;\n\n        var batata = [];\n        var send = [];\n        outrosUsuarios.forEach((x) => {\n          send.push(x);\n          x.customers.forEach((val) => {\n            batata.push(val);\n          });\n        });\n\n        usuarioSelecionado.forEach((x) => {\n          send.push(x);\n          x.customers.forEach((val) => {\n            batata.push(val);\n          });\n        });\n\n        this.dataCustomerGroupList = batata;\n        this.sendToTableGrupoClientes = send;\n        this.isEdit = false;\n        this.dialog = false;\n        this.grupoClientesSelecionados = [];\n        this.validateCustomersClass = [];\n        return;\n      }\n\n      if (this.grupoClientesSelecionados.length == 0) return;\n      this.grupoClientesSelecionados.forEach((x) => {\n        this.dataCustomerGroupList.push(x);\n      });\n\n      var index = this.sendToTableGrupoClientes.findIndex(\n        (x) => x.groupName == this.groupName\n      );\n\n      if (index == -1) {\n        let newItem = {\n          groupName: this.groupName,\n          groupLength: this.groupLength,\n          customers: this.grupoClientesSelecionados,\n          groupId: this.groupSelectedId,\n          status: this.groupStatus,\n        };\n\n        this.sendToTableGrupoClientes.push(newItem);\n        this.$emit(\"insertNew\", newItem);\n      }\n      this.isEdit = false;\n      this.dialog = false;\n      this.grupoClientesSelecionados = [];\n      this.validateCustomersClass = [];\n    },\n\n    closeDialogVincularGrupo() {\n      this.dialog = false;\n      this.search = \"\";\n      this.searchCustomer = null;\n      this.customersList = [];\n      this.listaGrupoClientes = [];\n      this.isEdit = false;\n    },\n\n    selectAllCustomers() {\n      if (this.validateCustomersClass.length > 0) {\n        this.grupoClientesSelecionados = [];\n        this.validateCustomersClass = [];\n        return;\n      }\n      this.customersList.forEach((x) => {\n        this.grupoClientesSelecionados.push(x);\n        this.validateCustomersClass.push(x.id);\n      });\n    },\n\n    setCustomersInList(item) {\n      var alreadyInList = this.validateCustomersClass.filter(\n        (x) => x == item.id\n      )[0];\n      if (alreadyInList) {\n        this.grupoClientesSelecionados = this.grupoClientesSelecionados.filter(\n          (x) => x.id != item.id\n        );\n        this.validateCustomersClass = this.validateCustomersClass.filter(\n          (x) => x != item.id\n        );\n      } else {\n        item.nomeGrupo = this.groupName;\n        this.grupoClientesSelecionados.push(item);\n        this.validateCustomersClass.push(item.id);\n      }\n    },\n\n    async searchCustomers(v) {\n      if (v == 1) {\n        var clientes = this.listaGrupoClientes.filter(\n          (x) => x.id == this.groupSelectedId\n        )[0];\n        this.customersList = clientes.customers;\n        return;\n      }\n      var page = [\n        {\n          groupId: this.groupSelectedId,\n          corporateName: this.searchCustomer,\n        },\n      ];\n\n      var result = await this.getCustomersByGroup(page[0]);\n\n      this.customersList = result.data.result;\n    },\n  },\n\n  mounted() {\n    if (!this.dataCustomerGroupList) this.dataCustomerGroupList = [];\n  },\n\n  watch: {\n    search() {\n      this.searchGrupos();\n    },\n\n    validateCustomersClass(v) {\n      this.$emit(\"setValidaterCustomerClass\", v);\n    },\n\n    grupoClientesSelecionados(v) {\n      this.$emit(\"setGrupoClientesSelecionados\", v);\n    },\n\n    setGroupSelectedId(v) {\n      this.groupSelectedId = v;\n    },\n    setValidateCustomersClass(v) {\n      this.validateCustomersClass = v;\n    },\n    setGrupoClientesSelecionados(v) {\n      this.grupoClientesSelecionados = v;\n    },\n    setCustomersList(v) {\n      this.customersList = v;\n    },\n\n    setListaGrupoClientes(v) {\n      this.listaGrupoClientes = v;\n    },\n\n    groupSelectedId(v) {\n      this.$emit(\"setGroupSelectedId\", v);\n    },\n\n    dialogVincularGrupo() {\n      if (this.isEdit) return;\n\n      if (this.dialogVincularGrupo) {\n        this.customersList = [];\n        this.validateCustomersClass = [];\n        this.groupSelectedId = null;\n        this.groupLength = null;\n        this.searchCustomer = null;\n        this.search = \"\";\n        this.listaGrupoClientes = [];\n        this.grupoClientesSelecionados = [];\n        this.searchGrupos();\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.grupos {\n  background-color: #fae7e7;\n  border-left: 2px solid #a10a0c;\n  background-image: mdi-menu-right;\n}\n</style>\n"]}]}