{"remainingRequest":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\src\\views\\authenticate\\ViewAuth.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\src\\views\\authenticate\\ViewAuth.vue","mtime":1683311360348},{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1683229778387},{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1683229781560},{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1683229779724},{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1683229777571},{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1683229780390}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLndyYXAtbG9naW4gewogIGhlaWdodDogMTAwJTsKfQoKLmJnLWxvZ2luIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMzIsIDMyLCAzMik7Cn0KCi5jb250YWluZXItbG9naW4gewogIHdpZHRoOiA0MCU7Cn0KCi5mb3JtLWxvZ2luIHsKICB3aWR0aDogMTAwJTsKfQouY29udGFpbmVyRm9ybXsKICB3aWR0aDogMzAlOwogIHBhZGRpbmc6IDIwcHg7CiAgbWFyZ2luOiAwOwp9Cg=="},{"version":3,"sources":["ViewAuth.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6IA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ViewAuth.vue","sourceRoot":"src/views/authenticate","sourcesContent":["<template>\n  <v-app>\n    <div class=\"d-flex justify-center mb-6 mt-12\">\n      <NovaSenha @resetParent=\"resetParent\" @closeModal=\"loadingBtnSave = false\" @success=\"successChangePassword\"\n        :object=\"object\" v-model=\"openModalNewPassWord\"></NovaSenha>\n\n\n        <div class=\"containerForm ma-2 pa-2\">\n        <h2 class=\"myApi-neutral--text text--var-1 \">Acesso</h2>\n\n        <v-form class=\"form-login text-center\" ref=\"form\" v-model=\"valid\">\n          <v-alert dismissible type=\"error\" v-show=\"alertError\" transition=\"scroll-y-transition\" class=\"mt-6 mb-8\"\n            style=\"text-align: left\">{{ alertErrorText }}</v-alert>\n\n          <v-alert dismissible type=\"success\" v-show=\"alertSuccess\" transition=\"scroll-y-transition\" class=\"mt-6 mb-8\"\n            style=\"text-align: left\">{{ alertSuccessText }}</v-alert>\n\n          <v-text-field label=\"Login\" v-model=\"inputData.userNameOrEmailAddress\" outlined :rules=\"[rules.required]\"\n            validate-on-blur color=\"myApi-neutral\"></v-text-field>\n\n          <v-text-field label=\"Senha\" v-model=\"inputData.password\" :append-icon=\"show ? 'mdi-eye' : 'mdi-eye-off'\"\n            :rules=\"[rules.required]\" :type=\"show ? 'text' : 'password'\" v-on:keyup.enter=\"tryAuthenticate()\"\n            @click:append=\"show = !show\" outlined validate-on-blur color=\"myApi-neutral\"></v-text-field>\n\n          <v-btn rounded large class=\"myApi-red white--text\" @click=\"tryAuthenticate()\"\n            :loading=\"loadingBtn\">ACESSAR</v-btn>\n        </v-form>\n      </div>\n\n    </div>\n  </v-app>\n</template>\n\n<script>\nimport { mapActions } from \"vuex\";\nimport NovaSenha from \"../../components/NovaSenha.vue\";\n\nexport default {\n  name: \"ViewLogin\",\n\n  data: () => ({\n    show: false,\n    rules: {\n      required: (value) => !!value || \"Preencha este campo!\",\n    },\n    valid: true,\n    object: null,\n    loadingBtn: false,\n    openModalNewPassWord: null,\n    inputData: {\n      rememberClient: true,\n    },\n    loadingBtnSave: false,\n    alertError: false,\n    alertErrorText: null,\n    alertSuccess: false,\n    alertSuccessText: null,\n  }),\n\n  methods: {\n    ...mapActions(\"ModuleSession\", {\n      getCurrentLoginInformations: \"getCurrentLoginInformation\",\n      login: \"login\",\n      firstLogin: \"firstLogin\",\n    }),\n\n    async successChangePassword() {\n      this.alertSuccess = true;\n      this.alertSuccessText = \"Senha alterada com sucesso\";\n      setTimeout(() => {\n        this.alertSuccess = false;\n        return location.reload();\n      }, 5000);\n      await this.setStorageUserInfo();\n    },\n\n    async firstLoginMethod(v) {\n      var response = await this.firstLogin(v);\n      if (response.status == 500) {\n        this.loadingBtn = false;\n        this.alertError = true;\n        this.alertErrorText = response.data.error.message;\n        setTimeout(() => {\n          this.alertError = false;\n        }, 5000);\n        return false;\n      } else if (response.data.result) {\n        this.openModalNewPassWord = true;\n        this.object = {\n          userNameOrEmailAddress: this.inputData.userNameOrEmailAddress,\n          password: v.password,\n          rememberClient: true,\n        };\n        return true;\n      } else {\n        return null;\n      }\n    },\n\n    async tryAuthenticate() {\n      if (this.$refs.form.validate()) {\n        this.alertError = false;\n        this.loadingBtn = true;\n\n        var result = await this.firstLoginMethod(this.inputData);\n        if (result != null) return;\n\n        var response = await this.login(this.inputData);\n\n        if (response.status == 200) {\n          await this.setStorageUserInfo();\n          return location.reload();\n        }\n      }\n    },\n\n    async setStorageUserInfo() {\n      let response = await this.getCurrentLoginInformations();\n      let userInfo = response.data.result.user;\n      let userInitials = (\n        userInfo.name.charAt(0) + userInfo.surname.charAt(0)\n      ).toUpperCase();\n      localStorage.setItem(\"userEmail\", userInfo.emailAddress);\n      localStorage.setItem(\"userName\", userInfo.name);\n      localStorage.setItem(\"userSurname\", userInfo.surname);\n      localStorage.setItem(\"userInitials\", userInitials);\n    },\n\n    resetParent(v) {\n      this.loadingBtn = v;\n      this.inputData = [];\n    },\n  },\n\n  components: {\n    NovaSenha,\n  },\n};\n</script>\n\n<style>\n.wrap-login {\n  height: 100%;\n}\n\n.bg-login {\n  background-color: rgb(32, 32, 32);\n}\n\n.container-login {\n  width: 40%;\n}\n\n.form-login {\n  width: 100%;\n}\n.containerForm{\n  width: 30%;\n  padding: 20px;\n  margin: 0;\n}\n</style>\n"]}]}