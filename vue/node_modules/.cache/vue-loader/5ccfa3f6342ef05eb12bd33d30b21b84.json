{"remainingRequest":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\src\\views\\usuarios\\permissoes\\perfilUsuario.vue?vue&type=template&id=34602e92&scoped=true&","dependencies":[{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\src\\views\\usuarios\\permissoes\\perfilUsuario.vue","mtime":1683311429850},{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1683229777571},{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1683229781713},{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1683229777571},{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1683229780390}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXYgc3R5bGU9Im92ZXJmbG93OiBhdXRvOyB3aWR0aDogMTAwJSI+CiAgPHYtZGlhbG9nIHYtbW9kZWw9Indhcm5pbmdQZXJtaXNzb2VzIiBtYXgtd2lkdGg9IjQ1MHB4Ij4KICAgIDxkaXYKICAgICAgY2xhc3M9IndoaXRlIGQtZmxleCBmbGV4LWNvbHVtbiBhbGlnbi1jZW50ZXIgcGEtNCIKICAgICAgc3R5bGU9ImJvcmRlci1yYWRpdXM6IDVweCIKICAgID4KICAgICAgPHYtaWNvbiBzdHlsZT0iZm9udC1zaXplOiA1MHB4IiBjb2xvcj0iI0Y3NUEwMiI+bWRpLWFsZXJ0PC92LWljb24+CiAgICAgIDxzcGFuIGNsYXNzPSJteC00IG10LTQiIHN0eWxlPSJ0ZXh0LWFsaWduOiBqdXN0aWZ5Ij4KICAgICAgICBBbyByZXRvcm5hciBhcyBwZXJtaXNzw7VlcyBwYXJhIG8gcGFkcsOjbyBkbyBwZXJmaWwgZG8gdXN1w6FyaW8sIGFzCiAgICAgICAgY3VzdG9taXphw6fDtWVzIGVmZXR1YWRhcyBzZXLDo28gcGVyZGlkYXMuIEVzdGEgYcOnw6NvIG7Do28gcG9kZXLDoSBzZXIKICAgICAgICBkZXNmZWl0YS4gRGVzZWphIGNvbnRpbnVhcj8KICAgICAgPC9zcGFuPgoKICAgICAgPGRpdiBjbGFzcz0iZC1mbGV4IG10LTEwIj4KICAgICAgICA8di1idG4KICAgICAgICAgIEBjbGljaz0id2FybmluZ1Blcm1pc3NvZXMgPSBmYWxzZSIKICAgICAgICAgIHN0eWxlPSJmb250LXNpemU6IDE1cHgiCiAgICAgICAgICByb3VuZGVkCiAgICAgICAgICBjbGFzcz0ibXItOCIKICAgICAgICAgIGNvbG9yPSIjMUExQTFBIgogICAgICAgICAgdGV4dAogICAgICAgICAgbGFyZ2UKICAgICAgICAgID5DQU5DRUxBUjwvdi1idG4KICAgICAgICA+CgogICAgICAgIDx2LWJ0bgogICAgICAgICAgQGNsaWNrPSJhcHBseURlZmF1bHQoKSIKICAgICAgICAgIHN0eWxlPSJmb250LXNpemU6IDE1cHgiCiAgICAgICAgICBkYXJrCiAgICAgICAgICByb3VuZGVkCiAgICAgICAgICBjb2xvcj0iI0Y3NUEwMiIKICAgICAgICAgIGxhcmdlCiAgICAgICAgICA+Q09OVElOVUFSPC92LWJ0bgogICAgICAgID4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8L3YtZGlhbG9nPgoKICA8di1kaWFsb2cgdi1tb2RlbD0id2FybmluZ0N1c3RvbWl6YWNhbyIgbWF4LXdpZHRoPSI0NTBweCI+CiAgICA8ZGl2CiAgICAgIGNsYXNzPSJ3aGl0ZSBkLWZsZXggZmxleC1jb2x1bW4gYWxpZ24tY2VudGVyIHBhLTQiCiAgICAgIHN0eWxlPSJib3JkZXItcmFkaXVzOiA1cHgiCiAgICA+CiAgICAgIDx2LWljb24gc3R5bGU9ImZvbnQtc2l6ZTogNTBweCIgY29sb3I9IiNGNzVBMDIiPm1kaS1hbGVydDwvdi1pY29uPgogICAgICA8c3BhbiBjbGFzcz0ibXgtNCBtdC00IiBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyIj4KICAgICAgICBBbyBhbHRlcmFyIG8gcGVyZmlsIGRvIHVzdcOhcmlvLCBhcyBjdXN0b21pemHDp8O1ZXMgZWZldHVhZGFzIHNlcsOjbwogICAgICAgIHBlcmRpZGFzLiBFc3RhIGHDp8OjbyBuw6NvIHBvZGVyw6Egc2VyIGRlc2ZlaXRhLiBEZXNlamEgY29udGludWFyPwogICAgICA8L3NwYW4+CgogICAgICA8ZGl2IGNsYXNzPSJkLWZsZXggbXQtMTAiPgogICAgICAgIDx2LWJ0bgogICAgICAgICAgQGNsaWNrPSJjYW5jZWxDaGFuZ2VSb2xlUHJvZmlsZSIKICAgICAgICAgIHN0eWxlPSJmb250LXNpemU6IDE1cHgiCiAgICAgICAgICByb3VuZGVkCiAgICAgICAgICBjbGFzcz0ibXItOCIKICAgICAgICAgIGNvbG9yPSIjMUExQTFBIgogICAgICAgICAgdGV4dAogICAgICAgICAgbGFyZ2UKICAgICAgICAgID5DQU5DRUxBUjwvdi1idG4KICAgICAgICA+CgogICAgICAgIDx2LWJ0bgogICAgICAgICAgc3R5bGU9ImZvbnQtc2l6ZTogMTVweCIKICAgICAgICAgIGRhcmsKICAgICAgICAgIHJvdW5kZWQKICAgICAgICAgIGNvbG9yPSIjRjc1QTAyIgogICAgICAgICAgbGFyZ2UKICAgICAgICAgIEBjbGljaz0iY2hhbmdlUHJvZmlsZSgpIgogICAgICAgICAgPkNPTlRJTlVBUjwvdi1idG4KICAgICAgICA+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPC92LWRpYWxvZz4KCiAgPHYtZGlhbG9nIHYtbW9kZWw9ImRpYWxvZ05hdmlvIiBtYXgtd2lkdGg9IjM2MHB4Ij4KICAgIDxkaXYgY2xhc3M9IndoaXRlIHBhLTUgZC1mbGV4IGZsZXgtY29sdW1uIGFsaWduLWNlbnRlciB0ZXh0LWNlbnRlciI+CiAgICAgIDx2LWljb24gc3R5bGU9ImZvbnQtc2l6ZTogNjBweCIgY29sb3I9IiNFMTAwMDAiPgogICAgICAgIG1kaS1hbGVydC1vY3RhZ29uCiAgICAgIDwvdi1pY29uPgoKICAgICAgPGg0CiAgICAgICAgY2xhc3M9Im15QXBpLW5ldXRyYWwtLXRleHQgdGV4dC0tdmFyLTEgbWItOCBtdC04IgogICAgICAgIHN0eWxlPSJmb250LXNpemU6IDE1cHgiCiAgICAgID4KICAgICAgICBQYXJhIHZpc3VhbGl6YXIgYSB2aWFnZW0gZG8gbmF2aW8sIG8gc2lzdGVtYSBpcsOhIGhhYmlsaXRhciBhcyBvcMOnw7VlcwogICAgICAgIEZvbGxvdy11cCBEZXRhbGhhZG8gZSBGb2xsb3ctdXAgUmVzdW1pZG8gcGFyYSBvIHBlcmZpbCBzZWxlY2lvbmFkby4KICAgICAgPC9oND4KCiAgICAgIDxkaXYgY2xhc3M9ImQtZmxleCBmbGV4LXJvdyBqdXN0aWZ5LWVuZCI+CiAgICAgICAgPHYtYnRuCiAgICAgICAgICBzdHlsZT0iYmFja2dyb3VuZDogI2UxMDAwMCIKICAgICAgICAgIGRhcmsKICAgICAgICAgIHJvdW5kZWQKICAgICAgICAgIGxhcmdlCiAgICAgICAgICB0ZXh0CiAgICAgICAgICBjbGFzcz0ibXItNCIKICAgICAgICAgIEBjbGljaz0iZGlhbG9nTmF2aW8gPSBmYWxzZSIKICAgICAgICAgID5GRUNIQVIgTUVOU0FHRU08L3YtYnRuCiAgICAgICAgPgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvdi1kaWFsb2c+CgogIDx2LWZvcm0gcmVmPSJmb3JtIj4KICAgIDxkaXYgY2xhc3M9ImQtZmxleCBhbGlnbi1jZW50ZXIgbWItNiI+CiAgICAgIDx2LXNlbGVjdAogICAgICAgIDpkaXNhYmxlZD0icmVhZG9ubHkiCiAgICAgICAgdi1tb2RlbD0icm9sZVByb2ZpbGVDb21wIgogICAgICAgIGNsYXNzPSJtci04IgogICAgICAgIDppdGVtcz0iCiAgICAgICAgICB1c2VyLnVzZXJQcm9maWxlID09IDEKICAgICAgICAgICAgPyBpdGVtc1BlcmZpbFVzdWFyaW9DbGllbnRlCiAgICAgICAgICAgIDogaXRlbXNQZXJmaWxVc3VhcmlvbXlBcGlNZXRhbHMKICAgICAgICAiCiAgICAgICAgbGFiZWw9IlBlcmZpbCBkZSBVc3XDoXJpbyIKICAgICAgICA6cnVsZXM9IltydWxlcy5yZXF1aXJlZF0iCiAgICAgICAgdmFsaWRhdGUtb24tYmx1cgogICAgICA+CiAgICAgIDwvdi1zZWxlY3Q+CgogICAgICA8ZGl2IGNsYXNzPSJkLWZsZXggZmxleC1jb2x1bW4ganVzdGlmeS1zdGFydCI+CiAgICAgICAgPHYtYnRuCiAgICAgICAgICBzbWFsbAogICAgICAgICAgb3V0bGluZWQKICAgICAgICAgIGNvbG9yPSIjMTA3MTU0IgogICAgICAgICAgY2xhc3M9ImN1c3RvbS1idG4gcHgtMTIgbXgtNCBtYi0yIgogICAgICAgICAgc3R5bGU9ImZvbnQtd2VpZ2h0OiA4MDA7IGZvbnQtc2l6ZTogMTJweCIKICAgICAgICAgIHJvdW5kZWQKICAgICAgICAgIHYtaWY9InVzZXIuaXNDdXN0b21pemVkIgogICAgICAgID4KICAgICAgICAgIDxzcGFuIHN0eWxlPSJ0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZSI+Q3VzdG9taXphZG88L3NwYW4+CiAgICAgICAgPC92LWJ0bj4KCiAgICAgICAgPHYtYnRuCiAgICAgICAgICBzbWFsbAogICAgICAgICAgb3V0bGluZWQKICAgICAgICAgIGNvbG9yPSIjMTA3MTU0IgogICAgICAgICAgY2xhc3M9ImN1c3RvbS1idG4gcHgtMTIgbXgtNCBtYi0yIgogICAgICAgICAgc3R5bGU9ImZvbnQtd2VpZ2h0OiA4MDA7IGZvbnQtc2l6ZTogMTJweCIKICAgICAgICAgIHJvdW5kZWQKICAgICAgICAgIHYtZWxzZQogICAgICAgID4KICAgICAgICAgIDxzcGFuIHN0eWxlPSJ0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZSI+UGFkcsOjbzwvc3Bhbj4KICAgICAgICA8L3YtYnRuPgoKICAgICAgICA8c3BhbgogICAgICAgICAgQGNsaWNrPSJvcGVuV2FybmluZ1Blcm1pc3NvZXMoKSIKICAgICAgICAgIGNsYXNzPSJteC00IGhvdmVyLWNsaWNrIgogICAgICAgICAgc3R5bGU9ImZvbnQtd2VpZ2h0OiA2MDA7CiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAnSW50ZXInOwogICAgICAgICAgICBmb250LXNpemU6IDEycHg7CiAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZDsKICAgICAgICAgICIKICAgICAgICA+CiAgICAgICAgICBSZXRvcm5hciBwZXJtaXNzw7VlcyBwYXJhIHBhZHLDo28KICAgICAgICA8L3NwYW4+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPC92LWZvcm0+CgogIDx2LWV4cGFuc2lvbi1wYW5lbHMgY2xhc3M9ImQtZmxleCBmbGV4LWNvbHVtbiI+CiAgICA8di1leHBhbnNpb24tcGFuZWwgc3R5bGU9IndpZHRoOiAxMDAlIj4KICAgICAgPHYtZXhwYW5zaW9uLXBhbmVsLWhlYWRlcgogICAgICAgIGNsYXNzPSJteUFwaS10ZXh0IgogICAgICAgIHN0eWxlPSJjb2xvcjogI2ZmZjsgYmFja2dyb3VuZDogI2ExMGEwYyIKICAgICAgPgogICAgICAgIEFwbGljYXRpdm8KICAgICAgPC92LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXI+CgogICAgICA8di1leHBhbnNpb24tcGFuZWwtY29udGVudD4KICAgICAgICA8TG9hZGluZwogICAgICAgICAgY2xhc3M9Im10LTMgcGEtMiBhbGlnbi1zZWxmLWNlbnRlciIKICAgICAgICAgIHYtaWY9ImxvYWRpbmciCiAgICAgICAgICA6c2l6ZT0iMzAiCiAgICAgICAgLz4KICAgICAgICA8ZGl2IHYtZWxzZSBjbGFzcz0iZC1mbGV4IGZsZXgtY29sdW1uIG10LTQiPgogICAgICAgICAgPHYtY2hlY2tib3gKICAgICAgICAgICAgdi1mb3I9IihhcHBJdGVtLCBpKSBpbiBhbGxBcHBMaXN0IgogICAgICAgICAgICA6a2V5PSJpIgogICAgICAgICAgICA6ZGlzYWJsZWQ9ImlzRGlzYWJsZShhcHBJdGVtKSIKICAgICAgICAgICAgdi1tb2RlbD0iYXBwSXRlbS5pc0dyYW50ZWQiCiAgICAgICAgICAgIHN0eWxlPSJmb250LXNpemU6IDhweCIKICAgICAgICAgICAgOmNvbG9yPSJkZWZpbmVDb2xvclNlbGVjdEJ1dHRvbihhcHBJdGVtKSIKICAgICAgICAgICAgY2xhc3M9ImNoZWNrYm94IG1iLTMiCiAgICAgICAgICAgIDpsYWJlbD0iYXBwSXRlbS5kaXNwbGF5TmFtZSIKICAgICAgICAgICAgQGNsaWNrPSJjaGVja2JveENsaWNrKGFwcEl0ZW0pIgogICAgICAgICAgICBAY2hhbmdlPSJvbkNoYW5nZVBlcm1pc3Npb24oKSIKICAgICAgICAgID48L3YtY2hlY2tib3g+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvdi1leHBhbnNpb24tcGFuZWwtY29udGVudD4KICAgIDwvdi1leHBhbnNpb24tcGFuZWw+CgogICAgPHYtZXhwYW5zaW9uLXBhbmVsIHYtaWY9IiFpc0FwcFByb2ZpbGUoKSIgc3R5bGU9IndpZHRoOiAxMDAlIj4KICAgICAgPHYtZXhwYW5zaW9uLXBhbmVsLWhlYWRlcgogICAgICAgIGNsYXNzPSJteUFwaS10ZXh0IgogICAgICAgIHN0eWxlPSJjb2xvcjogI2ZmZjsgYmFja2dyb3VuZDogI2ExMGEwYyIKICAgICAgPgogICAgICAgIEFkbWluaXN0cmF0aXZvCiAgICAgIDwvdi1leHBhbnNpb24tcGFuZWwtaGVhZGVyPgoKICAgICAgPHYtZXhwYW5zaW9uLXBhbmVsLWNvbnRlbnQ+CiAgICAgICAgPExvYWRpbmcKICAgICAgICAgIGNsYXNzPSJtdC0zIHBhLTIgYWxpZ24tc2VsZi1jZW50ZXIiCiAgICAgICAgICB2LWlmPSJsb2FkaW5nIgogICAgICAgICAgOnNpemU9IjMwIgogICAgICAgIC8+CiAgICAgICAgPGRpdiB2LWVsc2UgY2xhc3M9ImQtZmxleCBmbGV4LWNvbHVtbiI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJkLWZsZXggbXktMiBtYi02IiBzdHlsZT0id2lkdGg6IDUwJSI+CiAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJ3aWR0aDogNDUlIiBjbGFzcz0ibXItMTAiPk1lbnU8L3NwYW4+CiAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJ3aWR0aDogNSUiIGNsYXNzPSJtbC0xMCI+SGFiaWxpdGE8L3NwYW4+CiAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICA8ZGl2CiAgICAgICAgICAgIHYtZm9yPSIoYWRtaW5pc3RyYXRpdmVJdGVtLCBpKSBpbiBhbGxBZG1pbmlzdHJhdGl2ZUxpc3QiCiAgICAgICAgICAgIDprZXk9ImkiCiAgICAgICAgICAgIGNsYXNzPSJkLWZsZXggYWxpZ24tY2VudGVyIG1iLTQiCiAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDogNTAlIgogICAgICAgICAgPgogICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgY2xhc3M9ImQtZmxleCBhbGlnbi1jZW50ZXIgbXItMTAgZmxleC1ub3dyYXAiCiAgICAgICAgICAgICAgc3R5bGU9IndpZHRoOiA0NSUiCiAgICAgICAgICAgID4KICAgICAgICAgICAgICA8di1jaGVja2JveAogICAgICAgICAgICAgICAgOmRpc2FibGVkPSJyZWFkb25seSIKICAgICAgICAgICAgICAgIGNvbG9yPSIjQzkwQzBGIgogICAgICAgICAgICAgICAgY2xhc3M9ImNoZWNrYm94IgogICAgICAgICAgICAgICAgdi1tb2RlbD0iYWRtaW5pc3RyYXRpdmVJdGVtLmlzR3JhbnRlZCIKICAgICAgICAgICAgICAgIDpsYWJlbD0iYWRtaW5pc3RyYXRpdmVJdGVtLmRpc3BsYXlOYW1lIgogICAgICAgICAgICAgICAgQGNoYW5nZT0ib25DaGFuZ2VQZXJtaXNzaW9uUGFyZW50KGFkbWluaXN0cmF0aXZlSXRlbSkiCiAgICAgICAgICAgICAgPjwvdi1jaGVja2JveD4KICAgICAgICAgICAgPC9kaXY+CgogICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgY2xhc3M9ImQtZmxleCBhbGlnbi1jZW50ZXIgbWwtMTAiCiAgICAgICAgICAgICAgdi1pZj0iYWRtaW5pc3RyYXRpdmVJdGVtLmlzR3JhbnRlZCIKICAgICAgICAgICAgICBzdHlsZT0id2lkdGg6IDUlIgogICAgICAgICAgICA+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZC1mbGV4IGZsZXgtY29sdW1uIGFsaWduLWNlbnRlciBtbC0zIj4KICAgICAgICAgICAgICAgIDx2LWJ0bgogICAgICAgICAgICAgICAgICBjbGFzcz0ibWItMiBtci01IGJ0biIKICAgICAgICAgICAgICAgICAgaWNvbgogICAgICAgICAgICAgICAgICBjb2xvcj0iI0M5MEMwRiIKICAgICAgICAgICAgICAgICAgOmRpc2FibGVkPSJyZWFkb25seSIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPHYtaWNvbj5tZGktZXllPC92LWljb24+CiAgICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJmb250LXNpemU6IDEzcHg7IHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplIgogICAgICAgICAgICAgICAgICAgID5WZXI8L3NwYW4KICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgPC92LWJ0bj4KICAgICAgICAgICAgICA8L2Rpdj4KCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZC1mbGV4IGZsZXgtY29sdW1uIGFsaWduLWNlbnRlciBtbC02Ij4KICAgICAgICAgICAgICAgIDx2LWJ0bgogICAgICAgICAgICAgICAgICBjbGFzcz0ibWItMiBtbC0yIGJ0biIKICAgICAgICAgICAgICAgICAgaWNvbgogICAgICAgICAgICAgICAgICA6c3R5bGU9InsKICAgICAgICAgICAgICAgICAgICBjb2xvcjogYWRtaW5pc3RyYXRpdmVJdGVtLmNoaWxkcmVuRWRpdC5pc0dyYW50ZWQKICAgICAgICAgICAgICAgICAgICAgID8gY29sb3JSZWQKICAgICAgICAgICAgICAgICAgICAgIDogY29sb3JHcmV5LAogICAgICAgICAgICAgICAgICB9IgogICAgICAgICAgICAgICAgICBAY2xpY2s9IgogICAgICAgICAgICAgICAgICAgIGNoYW5nZVBlcm1pc3Npb25DaGlsZChhZG1pbmlzdHJhdGl2ZUl0ZW0uY2hpbGRyZW5FZGl0KQogICAgICAgICAgICAgICAgICAiCiAgICAgICAgICAgICAgICAgIDpkaXNhYmxlZD0icmVhZG9ubHkiCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDx2LWljb24+bWRpLXBlbmNpbDwvdi1pY29uPgogICAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0iZm9udC1zaXplOiAxM3B4OyB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZSIKICAgICAgICAgICAgICAgICAgICA+RWRpdGFyPC9zcGFuCiAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDwvdi1idG4+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvdi1leHBhbnNpb24tcGFuZWwtY29udGVudD4KICAgIDwvdi1leHBhbnNpb24tcGFuZWw+CiAgPC92LWV4cGFuc2lvbi1wYW5lbHM+CjwvZGl2Pgo="},null]}