{"remainingRequest":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\src\\views\\proformas\\ViewProformasEdit.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\src\\views\\proformas\\ViewProformasEdit.vue","mtime":1680609356661},{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1683229778387},{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1683229781560},{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1683229779724},{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1683229777571},{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1683229780390}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQoudi10YWIgew0KICB0ZXh0LXRyYW5zZm9ybTogbm9uZSAhaW1wb3J0YW50Ow0KfQ0KDQouYmFja2dyb3VuZDEgew0KICBjb2xvcjogI2M5MGMwZjsNCiAgYmFja2dyb3VuZDogI2ZmZjsNCn0NCg0KLmJhY2tncm91bmQyIHsNCiAgY29sb3I6ICNmZmY7DQogIGJhY2tncm91bmQ6ICNjOTBjMGY7DQp9DQo="},{"version":3,"sources":["ViewProformasEdit.vue"],"names":[],"mappingssfA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"ViewProformasEdit.vue","sourceRoot":"src/views/proformas","sourcesContent":["<template>\r\n  <div class=\"flex-column mx-10\" style=\"overflow: auto; width: 100%\">\r\n    <ModalConfirmSave\r\n      ref=\"modalConfirmSave\"\r\n      @confirmSave=\"updateDataWithFictitious()\"\r\n      @cancel=\"loadingSave = false\"\r\n    />\r\n    <top-section :nameRoute=\"nameRoute\" />\r\n\r\n    <div class=\"d-flex flex-column\">\r\n      <div class=\"d-flex justify-space-between\">\r\n        <div class=\"flex-grow d-flex justify-start\">\r\n          <p class=\"font-weight-bold\" style=\"font-size: 18px\">\r\n            Proforma {{ dataProforma.proformaValue }}\r\n          </p>\r\n          <v-chip\r\n            outlined\r\n            v-if=\"dataProforma.proformaStatus\"\r\n            class=\"ml-6\"\r\n            :color=\"\r\n              dataProforma.proformaStatus.color == '#FFFFFF'\r\n                ? 'black'\r\n                : dataProforma.proformaStatus.color\r\n            \"\r\n          >\r\n            {{ dataProforma.proformaStatus.description }}\r\n          </v-chip>\r\n        </div>\r\n        <div v-if=\"editPermission\" class=\"flex-grow d-flex justify-end\">\r\n          <v-btn\r\n            rounded\r\n            large\r\n            class=\"mr-2 ml-8\"\r\n            :disabled=\"loadingSave\"\r\n            text\r\n            @click=\"cancelarUpdate\"\r\n            >CANCELAR</v-btn\r\n          >\r\n          <v-btn\r\n            rounded\r\n            large\r\n            :loading=\"loadingSave\"\r\n            class=\"asia-red white--text mr-2\"\r\n            @click=\"checkUpdate()\"\r\n            >SALVAR</v-btn\r\n          >\r\n        </div>\r\n      </div>\r\n\r\n      <GeneralInformation\r\n        class=\"my-6\"\r\n        v-model=\"dataProforma\"\r\n        :readonly=\"!editPermission\"\r\n      />\r\n\r\n      <v-alert\r\n        type=\"success\"\r\n        transition=\"slide-y-transition\"\r\n        dismissible\r\n        v-show=\"alertSuccess\"\r\n        dense\r\n        >{{ alertSuccessText }}</v-alert\r\n      >\r\n\r\n      <v-alert\r\n        type=\"error\"\r\n        transition=\"slide-y-transition\"\r\n        dismissible\r\n        v-show=\"alertError\"\r\n        dense\r\n        >{{ alertErrorText }}</v-alert\r\n      >\r\n\r\n      <Loading\r\n        class=\"pa-2 align-self-center\"\r\n        v-if=\"loadingBoardings\"\r\n        :size=\"60\"\r\n      />\r\n      <div v-else class=\"d-flex flex-row justify-start\">\r\n        <div\r\n          class=\"white rounded-lg flex-grow-1\"\r\n          style=\"height: 600px; overflow: hidden\"\r\n        >\r\n          <v-tabs\r\n            v-model=\"tabs\"\r\n            vertical\r\n            background-color=\"#A00C0F\"\r\n            dark\r\n            flat\r\n            :slider-size=\"3\"\r\n            center-active\r\n          >\r\n            <div justify=\"center\" class=\"mx-3 my-3\">\r\n              <b style=\"font-size: 17px\"> Embarque </b>\r\n            </div>\r\n            <v-tab v-for=\"(boarding, i) in boardingGroup\" :key=\"i\">\r\n              <b style=\"font-size: 25px\">{{ `${i + 1}Â°` }}</b>\r\n            </v-tab>\r\n\r\n            <v-tabs-items v-model=\"tabs\">\r\n              <v-tab-item v-for=\"(boarding, i) in boardingGroup\" :key=\"i\">\r\n                <div class=\"my-2 ml-4\" style=\"height: 35px; overflow: hidden\">\r\n                  <b v-if=\"isNew\">{{ dataProforma.proformaValue }}</b>\r\n                  <b v-else>{{ boarding.invoice }}</b>\r\n\r\n                  <v-btn\r\n                    v-if=\"\r\n                      boarding.id &&\r\n                      !boarding.boardingCode &&\r\n                      editPermission &&\r\n                      boardingGroup.length > 1\r\n                    \"\r\n                    icon\r\n                    @click=\"deleteBoardingGroupById(boarding.id)\"\r\n                  >\r\n                    <v-icon> mdi-delete </v-icon>\r\n                  </v-btn>\r\n                </div>\r\n                <v-tabs flat v-model=\"tabsInside\">\r\n                  <v-tab href=\"#tab-1\">Follow-Up</v-tab>\r\n                  <v-tab href=\"#tab-2\">Materiais</v-tab>\r\n                  <v-tab href=\"#tab-3\">Financeiro</v-tab>\r\n                </v-tabs>\r\n\r\n                <v-tabs-items v-model=\"tabsInside\" class=\"pa-6\">\r\n                  <v-tab-item value=\"tab-1\">\r\n                    <EmbarqueFollowUp\r\n                      v-model=\"boarding.followUp\"\r\n                      :proformaBoardingData=\"boarding.followUpBoarding\"\r\n                      :proformaShipTripIntermediateStop=\"\r\n                        boarding.proformaShipTripIntermediateStop\r\n                      \"\r\n                      :proformaId=\"id\"\r\n                      :blNumber=\"boarding.boargindReferenceBL\"\r\n                      :readonly=\"!editPermission\"\r\n                    />\r\n                  </v-tab-item>\r\n                  <v-tab-item value=\"tab-2\">\r\n                    <proforma-materials\r\n                      :proformaCode=\"dataProforma.code\"\r\n                      :boardingGroupId=\"boarding.id\"\r\n                      :getAll=\"boardingGroup.length == 1\"\r\n                      :readonly=\"!editPermission\"\r\n                      :isFirstBoardingGroup=\"boarding.isFirstBoardingGroup\"\r\n                      @updateFullBoarding=\"updateFullBoarding($event)\"\r\n                    />\r\n                  </v-tab-item>\r\n                  <v-tab-item value=\"tab-3\">\r\n                    <proforma-financial\r\n                      v-model=\"boarding.payments\"\r\n                      :readonly=\"!editPermission\"\r\n                    />\r\n                  </v-tab-item>\r\n                </v-tabs-items>\r\n              </v-tab-item>\r\n            </v-tabs-items>\r\n          </v-tabs>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ModalConfirmSave from \"./modais/ModalConfirmSave.vue\";\r\nimport TopSection from \"@/components/TopSection.vue\";\r\nimport getRouterData from \"@/mixins/getRouterData.js\";\r\nimport validationRules from \"../../mixins/validationRules\";\r\nimport ProformaMaterials from \"./materiais/ProformaMaterials.vue\";\r\nimport ProformaFinancial from \"./financeiro/ProformaFinancial.vue\";\r\nimport EmbarqueFollowUp from \"./followUp/EmbarqueFollowUp.vue\";\r\nimport GeneralInformation from \"./informacoesGerais/GeneralInformation.vue\";\r\nimport Loading from \"../../components/Loading.vue\";\r\nimport { createNamespacedHelpers } from \"vuex\";\r\nimport { toBase64 } from \"@/lib/helpers/base64\";\r\n\r\nconst moduleProformas = createNamespacedHelpers(\"ModuleProformas\");\r\nconst moduleCategoriaSituacao = createNamespacedHelpers(\r\n  \"ModuleCategoriaSituacao\"\r\n);\r\nconst moduleProformaMateriais = createNamespacedHelpers(\r\n  \"ModuleProformaMateriais\"\r\n);\r\n\r\nexport default {\r\n  data: () => ({\r\n    reloadWithFicticious: false,\r\n    loadingSave: false,\r\n    alertSuccessText: \"\",\r\n    alertSuccess: false,\r\n    tabs: null,\r\n    tabsInside: null,\r\n    isNew: false,\r\n    dialogConfirmSave: false,\r\n    boardingGroup: [],\r\n    dataProforma: {\r\n      proformaStatus: null,\r\n      proformaValue: null,\r\n      code: null,\r\n      shipmentLimitDate: null,\r\n      orderDate: null,\r\n      customerCorporateName: null,\r\n      customerPlant: null,\r\n      manufacturerName: null,\r\n      exporterName: null,\r\n      userId: null,\r\n    },\r\n    boardingNew: {\r\n      invoice: null,\r\n      boardingCode: null,\r\n      boargindReferenceBL: null,\r\n      boardingDate: null,\r\n      incoterm: null,\r\n      sequence: null,\r\n      quantity: null,\r\n      exporterId: null,\r\n      customerId: null,\r\n      materialId: null,\r\n      shipTrip: {},\r\n      followUp: {\r\n        shipmentType: null,\r\n        productionStatusId: null,\r\n        inspectionStatusId: null,\r\n        comercialInvoiceStatusId: null,\r\n        boardingStatusId: null,\r\n        deliveryStatusId: null,\r\n        productionObs: null,\r\n        boardingObs: null,\r\n        arrivalObs: null,\r\n        deliveryObs: null,\r\n        clearanceLocation: null,\r\n        deliveryLocation: null,\r\n        endDate: null,\r\n        deliveryDate: null,\r\n        inspectionReportFile: null,\r\n        inspectionReportFileName: null,\r\n        blFile: null,\r\n        blFileName: null,\r\n        boargindReferenceBL: null,\r\n        invoiceFile: null,\r\n        invoiceFileName: null,\r\n        observations: null,\r\n        incotermText: null,\r\n        listUsersDespachantes: [],\r\n      },\r\n      payments: [],\r\n      boardings: [],\r\n    },\r\n    nameRoute: \"ViewProformas\",\r\n    alertErrorText: \"\",\r\n    alertError: \"\",\r\n    vModelProforma: {},\r\n    loadingBoardings: true,\r\n  }),\r\n\r\n  computed: {\r\n    editPermission() {\r\n      return this.hasPermission(this.$PermissionNames.permissionProformaEdit);\r\n    },\r\n  },\r\n  methods: {\r\n    ...moduleProformas.mapActions({\r\n      getById: \"getById\",\r\n      updateProforma: \"update\",\r\n      getBoardings: \"getBoardings\",\r\n      deleteBoardingGroup: \"deleteBoardingGroup\",\r\n    }),\r\n    ...moduleCategoriaSituacao.mapActions({\r\n      getAllCategoryStatus: \"getAllSelect\",\r\n    }),\r\n    ...moduleProformaMateriais.mapActions({\r\n      getAnyMaterialsNotBoarded: \"getAnyMaterialsNotBoarded\",\r\n    }),\r\n\r\n    async checkUpdate() {\r\n      this.loadingSave = true;\r\n      let anyNotBoarded = await this.getAnyMaterialsNotBoarded({\r\n        proformaId: this.id,\r\n      });\r\n\r\n      let fictitiousBoarding = this.boardingGroup.filter(\r\n        (x) => x.boardingCode == null && x.id != null\r\n      );\r\n\r\n      if (anyNotBoarded && fictitiousBoarding.length == 0) {\r\n        this.$refs.modalConfirmSave.open();\r\n      } else {\r\n        let showMessage = false;\r\n        this.boardingGroup.forEach((x) => {\r\n          let boardingsFull = x.boardings.filter(\r\n            (y) => y.fullBoarding == false\r\n          );\r\n          if (boardingsFull.length > 0) showMessage = true;\r\n        });\r\n\r\n        if (showMessage && fictitiousBoarding.length == 0)\r\n          this.$refs.modalConfirmSave.open();\r\n        else this.updateData();\r\n      }\r\n    },\r\n\r\n    async deleteBoardingGroupById(boardingGroupId) {\r\n      await this.deleteBoardingGroup({ boardingGroupId: boardingGroupId });\r\n\r\n      if (this.boardingGroup.length == 1) {\r\n        this.boardingGroup = [];\r\n        this.boardingGroup.push({ ...this.boardingNew });\r\n      }\r\n\r\n      this.alertSuccessText = \"Proforma atualizada com sucesso!\";\r\n      this.alertSuccess = true;\r\n      await this.loadProformaData();\r\n      setTimeout(() => {\r\n        this.alertSuccess = false;\r\n      }, 3000);\r\n    },\r\n\r\n    cancelarUpdate() {\r\n      if (this.$route.params)\r\n        this.$router.push({\r\n          name: \"ViewProformas\",\r\n          params: {\r\n            isUpdate: true,\r\n            options: this.$route.params.options,\r\n            search: this.$route.params.search,\r\n          },\r\n        });\r\n      else\r\n        this.$router.push({\r\n          name: \"ViewProformas\",\r\n          params: { isUpdate: true },\r\n        });\r\n    },\r\n\r\n    updateDataWithFictitious() {\r\n      this.boardingGroup.push({ ...this.boardingNew });\r\n      this.reloadWithFicticious = true;\r\n      this.updateData();\r\n    },\r\n\r\n    validateFilesLength(value, i) {\r\n      var array = [\"invoice\", \"BL\"];\r\n      if (\r\n        (value && value.length > 25000000) ||\r\n        (value && value.size > 25000000)\r\n      ) {\r\n        this.alertError = true;\r\n        this.alertErrorText = `Arquivo ${array[i]} ultrapassa os 25MB`;\r\n        this.loadingSave = false;\r\n        setTimeout(() => {\r\n          this.alertError = false;\r\n        }, 5000);\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n\r\n    async updateData() {\r\n      this.loadingSave = true;\r\n      for (let i = 0; i < this.boardingGroup.length; i++) {\r\n        if (\r\n          !this.validateFilesLength(\r\n            this.boardingGroup[i].followUp.invoiceFile,\r\n            0\r\n          )\r\n        )\r\n          return;\r\n        if (this.boardingGroup[i].followUp.invoiceFile instanceof File) {\r\n          this.boardingGroup[i].followUp.invoiceFile = await toBase64(\r\n            this.boardingGroup[i].followUp.invoiceFile,\r\n            false\r\n          );\r\n        }\r\n        if (\r\n          this.boardingGroup[i].followUp.inspectionReportFile instanceof File\r\n        ) {\r\n          this.boardingGroup[i].followUp.inspectionReportFile = await toBase64(\r\n            this.boardingGroup[i].followUp.inspectionReportFile,\r\n            false\r\n          );\r\n        }\r\n        if (!this.validateFilesLength(this.boardingGroup[i].followUp.blFile, 1))\r\n          return;\r\n        if (this.boardingGroup[i].followUp.blFile instanceof File) {\r\n          this.boardingGroup[i].followUp.blFile = await toBase64(\r\n            this.boardingGroup[i].followUp.blFile,\r\n            false\r\n          );\r\n        }\r\n      }\r\n\r\n      this.dataProforma.boardingGroup = this.boardingGroup;\r\n      this.dataProforma.userId = this.dataProforma.userId == 0 ? null : this.dataProforma.userId;\r\n      \r\n      let result = await this.updateProforma(this.dataProforma);\r\n\r\n      if (result.data.success) {\r\n        this.alertSuccessText = \"Proforma atualizada com sucesso!\";\r\n        this.alertSuccess = true;\r\n        this.loadProformaData();\r\n        setTimeout(() => {\r\n          this.alertSuccess = false;\r\n        }, 3000);\r\n      } else this.loadingSave = false;\r\n    },\r\n\r\n    updateFullBoarding(item) {\r\n      let boardingGroup = this.boardingGroup.filter(\r\n        (x) => x.id == item.boardingGroupId\r\n      );\r\n\r\n      if (boardingGroup.length > 0 && boardingGroup[0].boardings.length > 0) {\r\n        let boarding = boardingGroup[0].boardings.filter(\r\n          (x) => x.id == item.boardingId\r\n        );\r\n        if (boarding.length > 0) boarding[0].fullBoarding = item.fullBoarding;\r\n        else\r\n          boarding.push({\r\n            id: item.boardingId,\r\n            fullBoarding: item.fullBoarding,\r\n          });\r\n      } else {\r\n        boardingGroup[0].boardings.push({\r\n          id: item.boardingId,\r\n          fullBoarding: item.fullBoarding,\r\n        });\r\n      }\r\n    },\r\n\r\n    async loadItemsProformaStatusSelect() {\r\n      this.getAllCategoryStatus(10)\r\n        .then((response) => {\r\n          this.itemsProformaStatus = response.data.result.items.map((x) => ({\r\n            value: x.id,\r\n            text: x.description,\r\n          }));\r\n        })\r\n        .catch(() => {\r\n          this.itemsProformaStatus = [];\r\n        });\r\n    },\r\n\r\n    async loadBoardingsData() {\r\n      if (this.id) {\r\n        this.loadingBoardings = true;\r\n        let response = await this.getBoardings(this.id);\r\n        if (response.data.result && response.data.result.length > 0) {\r\n          this.boardingGroup = response.data.result;\r\n          let boardingsPendency = this.boardingGroup.filter((x) => x.pendency);\r\n          if (boardingsPendency.length > 0) {\r\n            this.tabs = this.boardingGroup.findIndex(\r\n              (x) => x == boardingsPendency[0]\r\n            );\r\n            this.tabsInside = \"tab-2\";\r\n          } else if (this.reloadWithFicticious) {\r\n            this.tabs = this.boardingGroup.length - 1;\r\n            this.reloadWithFicticious = false;\r\n          }\r\n        } else {\r\n          this.isNew = true;\r\n        }\r\n        this.loadingBoardings = false;\r\n      }\r\n    },\r\n\r\n    async loadProformaData() {      \r\n      this.loadingSave = true;\r\n      let response = await this.getById(this.id);\r\n      this.dataProforma = response.data.result;\r\n\r\n      this.loadBoardingsData();\r\n\r\n      this.loadingSave = false;\r\n    },\r\n  },\r\n\r\n  created() {\r\n    this.boardingGroup.push({ ...this.boardingNew });\r\n    if (this.id) {\r\n      this.loadProformaData();\r\n      if (\r\n        this.hasPermission(this.$PermissionNames.permissionCategorySituationSee)\r\n      )\r\n        this.loadItemsProformaStatusSelect();\r\n    }\r\n  },\r\n\r\n  props: [\"id\"],\r\n  mixins: [validationRules, getRouterData],\r\n  components: {\r\n    TopSection,\r\n    ProformaMaterials,\r\n    ProformaFinancial,\r\n    EmbarqueFollowUp,\r\n    GeneralInformation,\r\n    Loading,\r\n    ModalConfirmSave,\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.v-tab {\r\n  text-transform: none !important;\r\n}\r\n\r\n.background1 {\r\n  color: #c90c0f;\r\n  background: #fff;\r\n}\r\n\r\n.background2 {\r\n  color: #fff;\r\n  background: #c90c0f;\r\n}\r\n</style>\r\n"]}]}