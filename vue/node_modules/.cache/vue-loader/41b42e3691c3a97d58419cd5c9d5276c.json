{"remainingRequest":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\src\\views\\ordemCompra\\embarqueProforma\\embarqueProformaMateriais.vue?vue&type=style&index=0&id=8213b5bc&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\src\\views\\ordemCompra\\embarqueProforma\\embarqueProformaMateriais.vue","mtime":1680609356656},{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1683229778387},{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1683229781560},{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1683229779724},{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1683229777571},{"path":"C:\\Users\\lemos\\OneDrive\\Documentos\\My Web Sites\\7.3.0\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1683229780390}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLnYtYXBwbGljYXRpb24gLnB4LTYgew0KICBwYWRkaW5nLXJpZ2h0OiAwcHggIWltcG9ydGFudDsNCiAgcGFkZGluZy1sZWZ0OiAwcHggIWltcG9ydGFudDsNCn0NCg=="},{"version":3,"sources":["embarqueProformaMateriais.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoNA;AACA;AACA;AACA","file":"embarqueProformaMateriais.vue","sourceRoot":"src/views/ordemCompra/embarqueProforma","sourcesContent":["<template>\r\n  <div>\r\n    <ModalEditEmbarqueMaterial\r\n      ref=\"modalEditMaterial\"\r\n      @updateItem=\"updateMaterial($event)\"\r\n      @closeModal=\"closeModalEditMaterial($event)\"\r\n    />\r\n\r\n    <div class=\"my-3 ml-4\" style=\"height: 25px; overflow: hidden\">\r\n      <b v-if=\"boargindReferenceBL\">{{ `BL - ${boargindReferenceBL}` }}</b>\r\n      <b v-else>{{ `BL - ${invoice}` }}</b>\r\n    </div>\r\n\r\n    <v-data-table\r\n      disable-sort\r\n      :headers=\"headers\"\r\n      :items=\"rows\"\r\n      :options.sync=\"options\"\r\n      :page=\"page\"\r\n      :server-items-length=\"totalItems\"\r\n      noDataText=\"Nenhum registro encontrado\"\r\n      :loading=\"tableLoading\"\r\n      loading-text=\"Aguarde, carregando embarques...\"\r\n      :footer-props=\"{\r\n        itemsPerPageOptions: [10, 50, 100],\r\n        itemsPerPageText: 'Itens por Página',\r\n      }\"\r\n    >\r\n      <template v-slot:[`item.id`]=\"{ item }\">\r\n        <div class=\"d-flex flex-nowrap align-center\">\r\n          <v-checkbox \r\n            v-model=\"item.shipped\" \r\n            @change=\"openModalAndUpdateMaterial(item)\" \r\n            color=\"asia-red\"\r\n            :disabled=\"!editPermission\"\r\n          ></v-checkbox>\r\n          <v-btn \r\n            v-if=\"item.shipped && editPermission\" \r\n            icon \r\n            @click=\"$refs.modalEditMaterial.open(item)\"\r\n          >\r\n            <v-icon>mdi-pencil</v-icon>\r\n          </v-btn>\r\n        </div>\r\n      </template>\r\n\r\n      <template v-slot:[`item.provisionedQtd`]=\"{ item }\">\r\n        <div v-if=\"item.provisionedQtd\" class=\"d-flex flex-nowrap align-center\">\r\n          {{ `${item.provisionedQtd} kg` }}\r\n        </div>\r\n      </template>\r\n\r\n      <template v-slot:[`item.shippedQuantity`]=\"{ item }\">\r\n        <div\r\n          v-if=\"item.shippedQuantity\"\r\n          class=\"d-flex flex-nowrap align-center\"\r\n        >\r\n          {{ `${item.shippedQuantity} kg` }}\r\n        </div>\r\n      </template>\r\n\r\n      <template v-slot:[`item.unitaryValue`]=\"{ item }\">\r\n        <div v-if=\"item.unitaryValue\" class=\"d-flex flex-nowrap align-center\">\r\n          {{ `${currency} ${item.unitaryValue}` }}\r\n        </div>\r\n      </template>\r\n\r\n      <template v-slot:[`item.totalValue`]=\"{ item }\">\r\n        <div\r\n          v-if=\"item.provisionedQtd && item.unitaryValue\"\r\n          class=\"d-flex flex-nowrap align-center\"\r\n        >\r\n          {{ `${currency} ${item.provisionedQtd * item.unitaryValue}` }}\r\n        </div>\r\n      </template>\r\n\r\n      <template v-slot:[`body.append`]>\r\n        <div class=\"d-flex align-center pa-2\" style=\"width: 220%\">\r\n          <span class=\"flex-nowrap mr-2\" style=\"font-size: 12px\"\r\n            >Valor total dos materiais {{ currency }}\r\n          </span>\r\n          <b style=\"font-size: 14px\">{{ totalValue }}</b>\r\n        </div>\r\n      </template>\r\n    </v-data-table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport dataTable from \"@/mixins/dataTable.js\";\r\nimport crudController from \"@/mixins/crudController.js\";\r\nimport validationRules from \"@/mixins/validationRules\";\r\nimport ModalEditEmbarqueMaterial from \"./modalEditEmbarqueMaterial\";\r\nimport { createNamespacedHelpers } from \"vuex\";\r\n\r\nconst moduleBoardingMaterial = createNamespacedHelpers(\r\n  \"ModuleOrdemCompraBoardingMaterial\"\r\n);\r\nconst moduleOrdemDeCompra = createNamespacedHelpers(\"ModuleOrdemDeCompra\");\r\n\r\nexport default {\r\n  props: [\"currency\", \"boargindReferenceBL\", \"invoice\", \"id\"],\r\n  components: {\r\n    ModalEditEmbarqueMaterial,\r\n  },\r\n  watch: {\r\n    options: {\r\n      handler() {\r\n        this.loadItems();\r\n      },\r\n      deep: true,\r\n    },\r\n  },\r\n  computed: {\r\n    editPermission() {\r\n      return this.hasPermission(\r\n        this.$PermissionNames.permissionPurchaseOrderEdit\r\n      );\r\n    },\r\n  },\r\n  data: () => ({\r\n    page: 1,\r\n    options: {},\r\n    totalItems: 0,\r\n    tableLoading: false,\r\n    totalValue: 0,\r\n    headers: [\r\n      { text: \"Embarcado\", value: \"id\", width: \"5%\" },\r\n      { text: \"Código\", value: \"code\" },\r\n      { text: \"Descrição\", value: \"description\" },\r\n      { text: \"Provisionado O.C.\", value: \"provisionedQtd\" },\r\n      { text: \"Embarcado\", value: \"shippedQuantity\" },\r\n      { text: \"Valor Unitário\", value: \"unitaryValue\" },\r\n      { text: \"Valor Total\", value: \"totalValue\" },\r\n    ],\r\n    rows: [],\r\n    itemsBeforeModification: [],\r\n  }),\r\n  methods: {\r\n    ...moduleOrdemDeCompra.mapActions({\r\n      setIfIsUpdated: \"setIfIsUpdated\",\r\n    }),\r\n    ...moduleBoardingMaterial.mapActions({\r\n      getAll: \"getAll\",\r\n      getAllTotalValue: \"getAllTotalValue\",\r\n      update: \"update\",\r\n    }),\r\n\r\n    async openModalAndUpdateMaterial(material) {\r\n      if (material.shipped) {\r\n        material.shippedQuantity = 0;\r\n        this.$refs.modalEditMaterial.open(material);\r\n      } else {\r\n        await this.update(material);\r\n        this.loadItems();\r\n      }\r\n    },\r\n\r\n    async closeModalEditMaterial(material) {\r\n      material.shipped = false;\r\n    },\r\n\r\n    async updateMaterial(material) {\r\n      var items = {\r\n        id: this.$route.params.id,\r\n        isUpdated: true,\r\n      };\r\n      await this.setIfIsUpdated(items);\r\n      let result = await this.update(material);\r\n      if (result.status == 200) {\r\n        this.$emit(\"setSuccessMessage\");\r\n      }\r\n    },\r\n    async loadItems() {\r\n      let { page, itemsPerPage } = this.options;\r\n      let pageNumber = page > 0 ? page - 1 : 0;\r\n      let skipCount = pageNumber * itemsPerPage;\r\n      this.tableLoading = true;\r\n\r\n      let response = await this.getAll({\r\n        pageNumber: pageNumber,\r\n        skipCount: skipCount,\r\n        itemsPerPage: itemsPerPage,\r\n        purchaseOrderBoardingId: this.id,\r\n      });\r\n\r\n      if (response.status == 200) {\r\n        this.totalItems = response.data.result.totalCount;\r\n        this.rows = response.data.result.items;\r\n\r\n        this.loadTotalValue();\r\n      }\r\n\r\n      this.tableLoading = false;\r\n    },\r\n    async loadTotalValue() {\r\n      let response = await this.getAllTotalValue({\r\n        purchaseOrderBoardingId: this.id,\r\n      });\r\n      if (response.status == 200) this.totalValue = response.data.result;\r\n    },\r\n  },\r\n\r\n  mixins: [\r\n    validationRules,\r\n    dataTable({ store: \"ModuleOrdemCompraBoardingMaterial\" }),\r\n    crudController({ store: \"ModuleOrdemCompraBoardingMaterial\" }),\r\n  ],\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.v-application .px-6 {\r\n  padding-right: 0px !important;\r\n  padding-left: 0px !important;\r\n}\r\n</style>"]}]}